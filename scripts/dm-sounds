#!/usr/bin/env bash
#
# Script name: dm-sounds
# Description: Choose a ambient background sound to play
# Dependencies: dmenu, ffmpeg
# GitLab: https://www.gitlab.com/dwt1/dmscripts
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: Derek Taylor
#
# Need some ambient sound files?  Here are is a collection
# of 15 free to use sounds for personal or commercial projects:
# http://pbblogassets.s3.amazonaws.com/uploads/2016/09/15-Free-Ambient-Sound-Effects.zip

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail

_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo ".")")" && pwd)"
if [[  -f "${_path}/_dm-helper.sh" ]]; then
  # shellcheck disable=SC1090,SC1091
  source "${_path}/_dm-helper.sh"
else
  # shellcheck disable=SC1090
  echo "No helper-script found"
fi

# script will not hit this if there is no config-file to load
# shellcheck disable=SC1090
source "$(get_config)"


main() {
  # Check if sounds_dir is a real directory 
  # shellcheck disable=SC2154
  [ ! -d "${sounds_dir}" ] && err "The dm-sounds folder could not be found, place your sounds in ${sounds_dir}."
  # Produces a listing of the sound files.
  # shellcheck disable=SC2154
  readarray -t _sounds_list < <(find "${sounds_dir}" \( -iname "*.mp3" -o -iname "*.m4a" -o -iname "*.ogg" \) -printf '%P\n')
 
  echo "${_sounds_list[*]}"

  # An array of options to choose.
  local _options=(
    "Choose sound file"
    "Play random sound"
    "Stop sound player"
    "Quit"
  )


  # Piping the _options array into dmenu.
  # We use "printf '%s\n'" to format the array one item to a line.
  choice=$(printf '%s\n' "${_options[@]}" | ${DMENU} 'Ambient sounds:' "${@}")

  if [ "$choice" == "Choose sound file" ]; then
    # Piping the soundList array into dmenu.
    # We use "printf '%s\n'" to format the array one item to a line.
    choice=$(printf '%s\n' "${_sounds_list[@]}" | sort | ${DMENU} 'Choose sound file:' "$@")
    # Kill PID saved in cache file.
    kill "$(cat "$HOME/.cache/dmsounds")" || echo "mpv was not running."
    # Play the chosen sound file.
    # shellcheck disable=SC2154
    mpv --no-video --loop "$sounds_dir/$choice" &
    # Get PID for the above command and write to cache.
    _pid=$!
    echo "$_pid" > "$HOME/.cache/dmsounds"

  elif [ "$choice" == "Play random sound" ]; then
    getRand=$(printf '%s\n' "${_sounds_list[@]}" | shuf -n 1)
    # Kill PID saved in cache file.
    kill "$(cat "$HOME/.cache/dmsounds")" || echo "mpv was not running."
    # Play random sound file.
    mpv --no-video --loop "$sounds_dir/$getRand" &
    # ffplay -nodisp -loop 0 "$sounds_dir/$getRand" &
    # Get PID for the above command and write to cache.
    _pid=$!
    echo "$_pid" > "$HOME/.cache/dmsounds"

  elif [ "$choice" == "Stop sound player" ]; then
    kill "$(cat "$HOME/.cache/dmsounds")" || echo "mpv was not running."

  else
    echo "Program terminated." && exit 0
  fi
}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
