#!/usr/bin/env bash
#
# Script name: dm-pipewire-out-switcher
# Description: Switch default output for pipewire
# Dependencies: dmenu, pipewire, jq, pactl
# GitLab: https://www.gitlab.com/dwt1/dmscripts
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: Simon Ingelsson

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail
_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo ".")")" && pwd)"
if [[  -f "${_path}/_dm-helper.sh" ]]; then
  # shellcheck disable=SC1090,SC1091
  source "${_path}/_dm-helper.sh"
else
  # shellcheck disable=SC1090
  echo "No helper-script found"
fi

# script will not hit this if there is no config-file to load
# shellcheck disable=SC1090
source "$(get_config)"

get_default_sink() {
  pactl --format=json info | jq -r .default_sink_name 
}
get_all_sinks() {
  pactl --format=json list short sinks |\
    current=$(get_default_sink) jq -r '.[] | if .name == env.current then .state="* " else .state="" end | .state + .name'
}

main() {
  choice=$(printf '%s\n' "$(get_all_sinks)" | \
      sort | \
      ${DMENU} 'Sink: ' "$@") || exit 1

      if [ "$choice" ]; then
        if [[ "${choice}" == "* $(get_default_sink)" ]]; then
          exit 0
        fi
        pactl set-default-sink "${choice}"
        notify-send "Sink is now: ${choice}"
      else
          echo "Program terminated." && exit 0
      fi
}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
